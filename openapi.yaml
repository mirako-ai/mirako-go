components:
  schemas:
    ApiTokenRecord:
      additionalProperties: false
      properties:
        auth_token_type:
          description: Type of the authentication token used for this API user. Possible values are 'api_token', 'jwt_token'
          example: api_token
          type: string
        created_at:
          description: Creation timestamp of the API token
          example: "2023-10-01T12:00:00Z"
          format: date-time
          type: string
        events:
          additionalProperties: {}
          description: List of events associated with the API user, such as transaction events
          type: object
        hint:
          description: Hint for the API token, used for displaying in the UI
          example: mi-AbCdE
          type: string
        is_delinquent:
          description: Indicates if the API user is delinquent, e.g., negative credits, unpaid bills
          example: false
          type: boolean
        label:
          description: Label for the API token, used for describing the purpose of the token
          example: My API Token
          type: string
        token_id:
          description: Unique identifier for the API token. Empty if user authenticated by jwt session.
          example: YjR7k2L9xWpZcV3oA1sF
          type: string
        type:
          description: Type of the API user. Default to 'user'
          example: user
          type: string
        user_id:
          description: User ID of the API token owner
          example: f47ac10b-58cc-4372-a567-0e02b2c3d479
          type: string
      required:
        - hint
        - auth_token_type
        - user_id
        - label
        - type
        - token_id
        - created_at
        - is_delinquent
      type: object
    ApiUserMetadata:
      additionalProperties: false
      properties:
        is_delinquent:
          description: Indicates if the API user is delinquent, e.g., negative credits, unpaid bills
          example: false
          type: boolean
        user_id:
          description: User ID of the API user
          example: f47ac10b-58cc-4372-a567-0e02b2c3d479
          type: string
      required:
        - user_id
        - is_delinquent
      type: object
    AsyncBuildApiRequestBody:
      additionalProperties: false
      properties:
        image:
          description: The base64 encoded image to build the avatar from
          example: iVBORw0KGgoAAAANSUhEUgAA...
          format: base64
          type: string
        name:
          description: The name of the avatar
          example: Avatar Name
          type: string
      required:
        - name
        - image
      type: object
    AsyncBuildApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/AsyncBuildOutput"
          description: The build output for the avatar build task
      type: object
    AsyncBuildOutput:
      additionalProperties: false
      properties:
        avatar_id:
          description: The ID of the created avatar
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
          type: string
      required:
        - avatar_id
      type: object
    AsyncFinetuningApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/AsyncTaskStatus"
          description: The task status for the voice cloning task
      type: object
    AsyncFinetunningWebhookRequestBody:
      additionalProperties: true
      properties:
        delayTime:
          description: The time taken to process the request
          format: int64
          type: integer
        error:
          description: The error message if any
          type: string
        executionTime:
          description: The time taken to process the request
          format: int64
          type: integer
        id:
          description: The id of the request
          type: string
        output:
          $ref: "#/components/schemas/FinetuningOutputInternal"
          description: The output of the request
        status:
          description: The status of the request. Possible values are 'IN_QUEUE', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELED', 'TIMED_OUT'
          type: string
      required:
        - id
        - delayTime
        - executionTime
        - status
      type: object
    AsyncGenerateAvatarApiRequestBody:
      additionalProperties: false
      properties:
        prompt:
          description: The prompt for the avatar generation.
          example: A realistic photo of an Asian girl with long black hair, round-shaped eyes, wearing pink t-shirt, standing in front of a solid background.
          maxLength: 250
          type: string
        seed:
          description: Random seed for the generation, if not provided a random seed will be used
          example: 1234567890
          format: int64
          minimum: 0
          type: integer
        webhook:
          $ref: "#/components/schemas/Webhook"
          description: The webhook url to notify when the task is completed. If not provided, the user can poll the task status.
      required:
        - prompt
      type: object
    AsyncGenerateAvatarApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/AsyncTaskStatus"
          description: The task status for the avatar generation task
      type: object
    AsyncGenerateAvatarMotionApiRequestBody:
      additionalProperties: false
      properties:
        audio:
          description: The base64 encoded audio file to use as the avatar's speech.
          example: UklGRiQAAABXQVZFZm10IBAAAAABAAEAgD4AAAB9AAACABAAZGF0YQ==
          type: string
        image:
          description: The base64 encoded image to use as the starting frame, which should clearly showing the avatar's face.
          example: iVBORw0KGgoAAAANSUhEUgAA...
          type: string
        negative_prompt:
          description: The negative prompt to guide the avatar motion generation.
          example: ""
          maxLength: 512
          type: string
        positive_prompt:
          description: The positive prompt to guide the avatar motion generation.
          example: A happy young man laughing.
          maxLength: 512
          type: string
        webhook:
          $ref: "#/components/schemas/Webhook"
          description: The webhook url to notify when the task is completed
      required:
        - image
        - audio
        - positive_prompt
        - negative_prompt
      type: object
    AsyncGenerateAvatarMotionApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/AsyncTaskStatus"
          description: The task status for the avatar motion generation task
      type: object
    AsyncGenerateAvatarWebhookRequestBody:
      additionalProperties: true
      properties:
        delayTime:
          description: The time taken to process the request
          format: int64
          type: integer
        error:
          description: The error message if any
          type: string
        executionTime:
          description: The time taken to process the request
          format: int64
          type: integer
        id:
          description: The id of the request
          type: string
        output:
          $ref: "#/components/schemas/GenerateAvatarOutput"
          description: The output of the request
        status:
          description: The status of the request. Possible values are 'IN_QUEUE', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELED', 'TIMED_OUT'
          type: string
      required:
        - id
        - delayTime
        - executionTime
        - status
      type: object
    AsyncGenerateImageApiRequestBody:
      additionalProperties: false
      properties:
        aspect_ratio:
          description: The aspect ratio for the generation. Default to '16:9'
          enum:
            - "16:9"
            - "1:1"
            - "4:3"
            - "3:2"
            - "2:3"
            - "3:4"
            - "9:16"
          example: "16:9"
          type: string
        prompt:
          description: The prompt for the image generation. Include in the prompt the Avatar Id (uuid) to generate image of the avatar.
          example: A girl sitting in a cafe smiling, wide-shot, angled view.
          type: string
        seed:
          description: Random seed for the generation, if not provided a random seed will be used
          example: 1234567890
          format: int64
          minimum: 0
          type: integer
        webhook:
          $ref: "#/components/schemas/Webhook"
          description: The webhook url to notify when the task is completed. If not provided, the user can poll the task status.
      required:
        - prompt
        - aspect_ratio
      type: object
    AsyncGenerateImageApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/AsyncTaskStatus"
          description: The async task status for the image generation
      type: object
    AsyncGenerateTalkingAvatarApiRequestBody:
      additionalProperties: false
      properties:
        audio:
          description: The base64 encoded audio file to use as the avatar's speech.
          example: UklGRiQAAABXQVZFZm10IBAAAAABAAEAgD4AAAB9AAACABAAZGF0YQ==
          type: string
        image:
          description: The base64 encoded image to use as the avatar's face.
          example: iVBORw0KGgoAAAANSUhEUgAA...
          type: string
        webhook:
          $ref: "#/components/schemas/Webhook"
          description: The webhook url to notify when the task is completed
      required:
        - image
        - audio
      type: object
    AsyncGenerateTalkingAvatarApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/AsyncTaskStatus"
          description: The task status for the talking avatar generation task
      type: object
    AsyncTaskStatus:
      additionalProperties: false
      properties:
        status:
          description: The status of the async task. Possible values are 'IN_QUEUE', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELED', 'TIMED_OUT'
          enum:
            - IN_QUEUE
            - IN_PROGRESS
            - COMPLETED
            - FAILED
            - CANCELED
            - TIMED_OUT
          example: IN_PROGRESS
          type: string
        task_id:
          description: The id of the async task
          example: xdac2o3c
          type: string
      required:
        - task_id
        - status
      type: object
    AvatarResponse:
      additionalProperties: false
      properties:
        created_at:
          description: Creation timestamp of the avatar
          example: "2023-10-01T12:00:00Z"
          format: date-time
          type: string
        id:
          description: Unique identifier for the avatar
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
          type: string
        name:
          description: Name of the avatar
          example: My Avatar
          type: string
        status:
          description: Status of the avatar, either 'PENDING', 'BUILDING', 'READY' or 'ERROR'
          enum:
            - PENDING
            - BUILDING
            - READY
            - ERROR
          example: READY
          type: string
        themes:
          description: Avatar themes are the different appearances of the avatar, each with its own key image and live video.
          items:
            $ref: "#/components/schemas/PresignedAvatarTheme"
          nullable: true
          type: array
        user_id:
          description: User ID of the owner of this avatar
          example: f47ac10b-58cc-4372-a567-0e02b2c3d479
          type: string
      required:
        - id
        - user_id
        - name
        - created_at
        - status
        - themes
      type: object
    CreateApiTokenOutput:
      additionalProperties: false
      properties:
        auth_token_type:
          description: Type of the authentication token used for this API user. Possible values are 'api_token', 'jwt_token'
          example: api_token
          type: string
        created_at:
          description: Creation timestamp of the API token
          example: "2023-10-01T12:00:00Z"
          format: date-time
          type: string
        events:
          additionalProperties: {}
          description: List of events associated with the API user, such as transaction events
          type: object
        hint:
          description: Hint for the API token, used for displaying in the UI
          example: mi-AbCdE
          type: string
        is_delinquent:
          description: Indicates if the API user is delinquent, e.g., negative credits, unpaid bills
          example: false
          type: boolean
        label:
          description: Label for the API token, used for describing the purpose of the token
          example: My API Token
          type: string
        token:
          type: string
        token_id:
          description: Unique identifier for the API token. Empty if user authenticated by jwt session.
          example: YjR7k2L9xWpZcV3oA1sF
          type: string
        type:
          description: Type of the API user. Default to 'user'
          example: user
          type: string
        user_id:
          description: User ID of the API token owner
          example: f47ac10b-58cc-4372-a567-0e02b2c3d479
          type: string
      required:
        - token
        - hint
        - auth_token_type
        - user_id
        - label
        - type
        - token_id
        - created_at
        - is_delinquent
      type: object
    CreateTokenApiRequestBody:
      additionalProperties: false
      properties:
        label:
          description: Label for the API token
          example: My API Token
          maxLength: 100
          type: string
      required:
        - label
      type: object
    CreateTokenApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/CreateApiTokenOutput"
          description: Created API token record
      required:
        - data
      type: object
    DataStruct:
      additionalProperties: false
      type: object
    DeleteVoiceProfileApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/DataStruct"
          description: Empty response on successful deletion
      required:
        - data
      type: object
    DummyResponseToTriggerTransformerBody:
      additionalProperties: false
      properties:
        message:
          description: A dummy response
          type: string
      required:
        - message
      type: object
    ErrorDetail:
      additionalProperties: false
      properties:
        location:
          description: Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
          type: string
        message:
          description: Error message text
          type: string
        value:
          description: The value at the given location
      type: object
    ErrorModel:
      additionalProperties: false
      properties:
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          example: Property foo is required but is missing.
          type: string
        errors:
          description: Optional list of individual error details
          items:
            $ref: "#/components/schemas/ErrorDetail"
          nullable: true
          type: array
        instance:
          description: A URI reference that identifies the specific occurrence of the problem.
          example: https://example.com/error-log/abc123
          format: uri
          type: string
        status:
          description: HTTP status code
          example: 400
          format: int64
          type: integer
        title:
          description: A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
          example: Bad Request
          type: string
        type:
          default: about:blank
          description: A URI reference to human-readable documentation for the error.
          example: https://example.com/errors/example
          format: uri
          type: string
      type: object
    FinetuningMetadata:
      additionalProperties: false
      properties:
        Extra:
          additionalProperties: {}
          type: object
        ref_audio:
          $ref: "#/components/schemas/RemoteFile"
          description: A sample clip of the finetuned voice model for preview purpose.
      required:
        - Extra
      type: object
    FinetuningOutputInternal:
      additionalProperties: false
      properties:
        error:
          type: string
        id:
          type: string
        meta_data:
          $ref: "#/components/schemas/FinetuningMetadata"
          description: Additional metadata about the finetuning process
        model_infer_params:
          additionalProperties: {}
          description: The inference parameters for the model
          type: object
        profile_id:
          type: string
        train_time:
          format: float
          type: number
      required:
        - train_time
      type: object
    FinetuningStatusApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/FinetuningTaskOutput"
          description: The voice cloning task status
      type: object
    FinetuningTaskOutput:
      additionalProperties: false
      properties:
        error:
          description: Error message if any
          type: string
        meta_data:
          additionalProperties: {}
          description: Additional metadata about the finetuning process
          type: object
        profile_id:
          description: The profile ID of the custom voice model
          type: string
        status:
          description: The status of the async task. Possible values are 'IN_QUEUE', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELED', 'TIMED_OUT'
          enum:
            - IN_QUEUE
            - IN_PROGRESS
            - COMPLETED
            - FAILED
            - CANCELED
            - TIMED_OUT
          example: IN_PROGRESS
          type: string
        task_id:
          description: The id of the async task
          example: xdac2o3c
          type: string
      required:
        - task_id
        - status
      type: object
    GenerateAvatarMotionOutputInternal:
      additionalProperties: false
      properties:
        engine_processing_time:
          description: Model inference time in seconds.
          format: float
          type: number
        error:
          description: Error message if any
          type: string
        output_duration:
          description: The duration of the output video in seconds.
          example: 5
          format: double
          type: number
        processing_info:
          description: Additional info about the processing.
          type: string
        request_id:
          description: The id of the request
          type: string
        result_b64_str:
          description: The base64-encoded MP4 video output. Only available when the result_type is 'b64_str'.
          type: string
        result_s3_info:
          $ref: "#/components/schemas/RemoteFile"
          description: S3 information for the output video. Only available when the result_type is 's3_file'.
        total_processing_time:
          description: Total processing time in seconds.
          format: float
          type: number
      required:
        - request_id
      type: object
    GenerateAvatarMotionStatusApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/GenerateAvatarMotionTaskOutput"
          description: The avatar motion generation task output
      type: object
    GenerateAvatarMotionTaskOutput:
      additionalProperties: false
      properties:
        error:
          description: Error message if any
          type: string
        file_url:
          description: The URL of the output MP4 video.
          type: string
        output_duration:
          description: The duration of the output video in seconds.
          example: 5
          format: double
          type: number
        status:
          description: The status of the async task. Possible values are 'IN_QUEUE', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELED', 'TIMED_OUT'
          enum:
            - IN_QUEUE
            - IN_PROGRESS
            - COMPLETED
            - FAILED
            - CANCELED
            - TIMED_OUT
          example: IN_PROGRESS
          type: string
        task_id:
          description: The id of the async task
          example: xdac2o3c
          type: string
      required:
        - task_id
        - status
      type: object
    GenerateAvatarMotionWebhookRequestBody:
      additionalProperties: true
      properties:
        delayTime:
          description: The time taken to process the request
          format: int64
          type: integer
        error:
          description: The error message if any
          type: string
        executionTime:
          description: The time taken to process the request
          format: int64
          type: integer
        id:
          description: The id of the request
          type: string
        output:
          $ref: "#/components/schemas/GenerateAvatarMotionOutputInternal"
          description: The output of the request
        status:
          description: The status of the request. Possible values are 'IN_QUEUE', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELED', 'TIMED_OUT'
          type: string
      required:
        - id
        - delayTime
        - executionTime
        - status
      type: object
    GenerateAvatarOutput:
      additionalProperties: false
      properties:
        image:
          description: The generated avatar image, in base64 format
          type: string
      type: object
    GenerateAvatarStatusApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/GenerateAvatarTaskOutput"
          description: The avatar generation task output
      type: object
    GenerateAvatarTaskOutput:
      additionalProperties: false
      properties:
        image:
          description: The generated avatar image, in base64 format
          type: string
        status:
          description: The status of the async task. Possible values are 'IN_QUEUE', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELED', 'TIMED_OUT'
          enum:
            - IN_QUEUE
            - IN_PROGRESS
            - COMPLETED
            - FAILED
            - CANCELED
            - TIMED_OUT
          example: IN_PROGRESS
          type: string
        task_id:
          description: The id of the async task
          example: xdac2o3c
          type: string
      required:
        - task_id
        - status
      type: object
    GenerateImageStatusApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/GenerateTaskOutput"
          description: The image generation task output
      type: object
    GenerateTalkingAvatarOutputInternal:
      additionalProperties: false
      properties:
        b64_video_str:
          type: string
        error:
          description: Error message if any
          type: string
        id:
          type: string
        infer_time:
          format: float
          type: number
        output_duration:
          description: The duration of the output video in seconds.
          example: 5
          format: double
          type: number
        s3_info:
          $ref: "#/components/schemas/RemoteFile"
          description: S3 information for the output video. Only available when the return_type is 'file_url'.
      required:
        - id
        - infer_time
      type: object
    GenerateTalkingAvatarStatusApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/GenerateTalkingAvatarTaskOutput"
          description: The talking avatar generation task output
      type: object
    GenerateTalkingAvatarTaskOutput:
      additionalProperties: false
      properties:
        error:
          description: Error message if any
          type: string
        file_url:
          description: The URL of the output MP4 video.
          type: string
        output_duration:
          description: The duration of the output video in seconds.
          example: 5
          format: double
          type: number
        status:
          description: The status of the async task. Possible values are 'IN_QUEUE', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELED', 'TIMED_OUT'
          enum:
            - IN_QUEUE
            - IN_PROGRESS
            - COMPLETED
            - FAILED
            - CANCELED
            - TIMED_OUT
          example: IN_PROGRESS
          type: string
        task_id:
          description: The id of the async task
          example: xdac2o3c
          type: string
      required:
        - task_id
        - status
      type: object
    GenerateTalkingAvatarWebhookRequestBody:
      additionalProperties: true
      properties:
        delayTime:
          description: The time taken to process the request
          format: int64
          type: integer
        error:
          description: The error message if any
          type: string
        executionTime:
          description: The time taken to process the request
          format: int64
          type: integer
        id:
          description: The id of the request
          type: string
        output:
          $ref: "#/components/schemas/GenerateTalkingAvatarOutputInternal"
          description: The output of the request
        status:
          description: The status of the request. Possible values are 'IN_QUEUE', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELED', 'TIMED_OUT'
          type: string
      required:
        - id
        - delayTime
        - executionTime
        - status
      type: object
    GenerateTaskOutput:
      additionalProperties: false
      properties:
        image:
          description: The generated image in JPG format, encoded in base64.
          type: string
        status:
          description: The status of the async task. Possible values are 'IN_QUEUE', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELED', 'TIMED_OUT'
          enum:
            - IN_QUEUE
            - IN_PROGRESS
            - COMPLETED
            - FAILED
            - CANCELED
            - TIMED_OUT
          example: IN_PROGRESS
          type: string
        task_id:
          description: The id of the async task
          example: xdac2o3c
          type: string
      required:
        - task_id
        - status
      type: object
    GetApiUserMetadataResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/ApiUserMetadata"
          description: API user metadata
      required:
        - data
      type: object
    GetAvatarApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/AvatarResponse"
          description: Avatar data
      required:
        - data
      type: object
    GetAvatarSystemProfileApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/PresignedAvatarSystemProfile"
          description: Avatar system profile
      required:
        - data
      type: object
    GetPremadeProfilesApiResponseBody:
      additionalProperties: false
      properties:
        data:
          description: List of premade voice profiles
          items:
            $ref: "#/components/schemas/PresignedVoiceProfile"
          nullable: true
          type: array
      required:
        - data
      type: object
    GetSessionProfileApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/MetisSessionProfile"
          description: The session profile for the given session id
      type: object
    GetSystemProfileApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/PresignedVoiceSystemProfile"
          description: The voice system profile
      type: object
    GetUserAvatarListApiResponseBody:
      additionalProperties: false
      properties:
        data:
          description: List of avatars for the user
          items:
            $ref: "#/components/schemas/AvatarResponse"
          nullable: true
          type: array
      required:
        - data
      type: object
    GetVoiceProfileApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/PresignedVoiceProfile"
          description: Voice profile data
      required:
        - data
      type: object
    GetVoiceProfilesApiResponseBody:
      additionalProperties: false
      properties:
        data:
          description: List of user custom voice profiles
          items:
            $ref: "#/components/schemas/PresignedVoiceProfile"
          nullable: true
          type: array
      required:
        - data
      type: object
    LaunchApiRequestBody:
      additionalProperties: false
      properties:
        model:
          description: The interactive model version to be launched.
          example: metis-2.5
          type: string
        opts:
          additionalProperties: {}
          description: Additional options for the instance launch, such as countryCode, gpuTypeIds etc
          type: object
        session_group:
          description: The session group name for the instance. Default session group will be used if it left unspecfied or empty.
          example: default
          type: string
      required:
        - model
      type: object
    LaunchApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/MetisInstance"
          description: The launched interactive instance
      type: object
    ListApiTokensApiResponseBody:
      additionalProperties: false
      properties:
        data:
          description: List of API tokens for the user
          items:
            $ref: "#/components/schemas/ApiTokenRecord"
          nullable: true
          type: array
      required:
        - data
      type: object
    ListSessionsApiResponseBody:
      additionalProperties: false
      properties:
        data:
          description: List of active interactive sessions
          items:
            $ref: "#/components/schemas/MetisSession"
          nullable: true
          type: array
      type: object
    Machine:
      additionalProperties: false
      properties:
        cpuTypeId:
          type: string
        gpuAvailable:
          format: int64
          type: integer
        gpuTypeId:
          type: string
        maintenanceEnd:
          $ref: "#/components/schemas/RunpodTime"
        maintenanceNote:
          type: string
        maintenanceStart:
          $ref: "#/components/schemas/RunpodTime"
        secureCloud:
          type: boolean
      type: object
    MetisInstance:
      additionalProperties: false
      properties:
        instance_id:
          type: string
        launch_time:
          format: date-time
          type: string
        machine:
          $ref: "#/components/schemas/Machine"
        metis_model:
          type: string
        state:
          type: string
        user_id:
          type: string
      required:
        - instance_id
        - metis_model
        - state
      type: object
    MetisSession:
      additionalProperties: false
      properties:
        avatar:
          $ref: "#/components/schemas/MetisSessionAvatar"
          description: Details of the avatar used in the session
        idle_timeout:
          description: Idle timeout duration in minutes
          format: int64
          type: integer
        metis_model:
          description: The Metis model used in the session
          type: string
        session_id:
          description: Unique identifier for the session
          type: string
        start_time:
          description: Timestamp when the session started in RFC3339 format
          format: date-time
          type: string
        state:
          description: Current state of the session
          type: string
        user_id:
          description: User ID of the session owner
          type: string
      required:
        - avatar
        - start_time
      type: object
    MetisSessionAvatar:
      additionalProperties: false
      properties:
        id:
          description: Unique identifier for the avatar
          type: string
        name:
          description: Name of the avatar
          type: string
      type: object
    MetisSessionProfile:
      additionalProperties: false
      properties:
        avatar:
          $ref: "#/components/schemas/PresignedAvatarSystemProfile"
        session_id:
          type: string
        session_token:
          type: string
      required:
        - session_id
        - session_token
        - avatar
      type: object
    PresignedAvatarSystemProfile:
      additionalProperties: false
      properties:
        id:
          type: string
        image:
          type: string
        liveportrait:
          items:
            type: string
          nullable: true
          type: array
        name:
          type: string
      required:
        - id
        - name
      type: object
    PresignedAvatarTheme:
      additionalProperties: false
      properties:
        key_image:
          description: URL of the key portrait image of the avatar in this theme.
          example: https://example.com/image.png
          type: string
        live_video:
          description: URL of the live video for the avatar in this theme.
          example: https://example.com/live.mp4
          type: string
        name:
          description: Name of the avatar theme
          example: Default
          type: string
      required:
        - name
      type: object
    PresignedVoiceProfile:
      additionalProperties: false
      properties:
        created_at:
          description: The creation date of the voice profile.
          example: "2023-10-01T12:00:00Z"
          format: date-time
          type: string
        description:
          description: The description of the voice profile.
          example: A friendly and professional voice for customer support.
          type: string
        id:
          description: The unique identifier for the voice profile.
          type: string
        is_premade:
          description: Whether the voice profile is a default premade profile.
          example: true
          type: boolean
        languages:
          description: The languages supported by the voice profile.
          example:
            - en
            - yue
          items:
            type: string
          nullable: true
          type: array
        name:
          description: The name of the voice profile.
          example: Mira Korner
          type: string
        sample_clip:
          description: The URL of a sample audio clip for the voice profile.
          example: https://example.com/sample.mp3
          type: string
        status:
          description: The status of the voice profile.
          example: READY
          type: string
        user_id:
          description: The user ID of the owner associated with the voice profile.
          example: f47ac10b-58cc-4372-a567-0e02b2c3d479
          type: string
      required:
        - id
      type: object
    PresignedVoiceSystemProfile:
      additionalProperties: false
      properties:
        created_at:
          description: The creation date of the voice profile.
          example: "2023-10-01T12:00:00Z"
          format: date-time
          type: string
        description:
          description: The description of the voice profile.
          example: A friendly and professional voice for customer support.
          type: string
        id:
          description: The unique identifier for the voice profile.
          type: string
        is_premade:
          description: Whether the voice profile is a default premade profile.
          example: true
          type: boolean
        languages:
          description: The languages supported by the voice profile.
          example:
            - en
            - yue
          items:
            type: string
          nullable: true
          type: array
        name:
          description: The name of the voice profile.
          example: Mira Korner
          type: string
        params:
          additionalProperties: {}
          description: The parameters used for the voice model.
          type: object
        sample_clip:
          description: The URL of a sample audio clip for the voice profile.
          example: https://example.com/sample.mp3
          type: string
        service_name:
          description: The name of the voice service used for this profile.
          type: string
        status:
          description: The status of the voice profile.
          example: READY
          type: string
        user_id:
          description: The user ID of the owner associated with the voice profile.
          example: f47ac10b-58cc-4372-a567-0e02b2c3d479
          type: string
      required:
        - id
      type: object
    PrivateApiResponseBody:
      additionalProperties: false
      properties:
        message:
          description: A simple hello world message for private API access
          type: string
      required:
        - message
      type: object
    RemoteFile:
      additionalProperties: false
      properties:
        bucket:
          type: string
        key:
          type: string
        region:
          type: string
      required:
        - region
        - bucket
        - key
      type: object
    RunpodTime:
      additionalProperties: false
      type: object
    STTApiRequestBody:
      additionalProperties: false
      properties:
        audio:
          description: Base64 encoded audio data
          example: UklGRiQAAABXQVZFZm10IBAAAAABAAEAgD4AAAB9AAACABAAZGF0YQ==
          format: base64
          type: string
      required:
        - audio
      type: object
    STTApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/STTOutput"
          description: Speech to text output
      type: object
    STTOutput:
      additionalProperties: false
      properties:
        id:
          description: The unique request ID
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
          type: string
        input_duration:
          description: The duration of the input audio in seconds.
          example: 5
          format: double
          type: number
        text:
          description: The transcribed text
          example: Simplicity is the ultimate sophistication.
          type: string
        transcription:
          description: The transcription of the audio
          example:
            - end: 3
              start: 0
              text: Simplicity is the ultimate sophistication.
          items: {}
          nullable: true
          type: array
      required:
        - id
        - text
        - transcription
      type: object
    StartSessionApiRequestBody:
      additionalProperties: false
      properties:
        avatar_id:
          description: The avatar id
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
          type: string
        idle_timeout:
          description: Idle timeout in mins. The default value is 15 minutes if not specified. Setting it to -1 will disable the idle timeout, making the session never auto-terminate due to inactivity.
          example: 15
          format: int64
          type: integer
        instruction:
          description: The instruction prompt for the avatar in the session
          example: You are a helpful assistant.
          maxLength: 12000
          type: string
        llm_model:
          description: The LLM model to be used for generating avatar's response
          example: gemini-2.0-flash
          type: string
        model:
          default: metis-2.5
          description: The interactive model version. The default model used is 'metis-2.5'
          enum:
            - metis-2.5
          example: metis-2.5
          type: string
        tools:
          description: The tools to be used in the session
          type: string
        use_beta:
          description: Use beta interactive model. Beta model is the latest dev model, which is rapidly changed, may have bugs and not suitable for production. Default is false.
          example: false
          type: boolean
        voice_profile_id:
          description: The voice profile id
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
          type: string
      required:
        - avatar_id
        - llm_model
        - instruction
        - voice_profile_id
      type: object
    StartSessionApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/StartSessionOutput"
          description: The result of the start session request
      type: object
    StartSessionOutput:
      additionalProperties: false
      properties:
        session:
          $ref: "#/components/schemas/MetisSession"
          description: The started session details
        session_token:
          description: The session token for the started session
          type: string
      required:
        - session
        - session_token
      type: object
    StopSessionOutput:
      additionalProperties: false
      properties:
        stopped_sessions:
          description: The list of stopped session IDs
          items:
            type: string
          nullable: true
          type: array
      required:
        - stopped_sessions
      type: object
    StopSessionsApiRequestBody:
      additionalProperties: false
      properties:
        session_ids:
          description: The id of the sessions to be stopped
          items:
            type: string
          nullable: true
          type: array
      required:
        - session_ids
      type: object
    StopSessionsApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/StopSessionOutput"
          description: The result of the stop sessions request
      type: object
    TTSApiRequestBody:
      additionalProperties: false
      properties:
        chinese_language:
          default: yue
          description: This param tells the TTS to use the chinese language dialect to generate audio, and only required when generating audio with Mandarin or Cantonese. Currently supports 'mandarin' and 'yue' (i.e. Cantonese) variants.
          enum:
            - mandarin
            - yue
          example: yue
          type: string
        opts:
          $ref: "#/components/schemas/TTSParams"
          description: Optional parameters to control the style of the output audio.
        return_type:
          description: Return type of the audio, either 'b64_audio_str' or 'file_url'.
          example: b64_audio_str
          type: string
        text:
          description: Text to be converted to speech
          example: Simplicity is the ultimate sophistication.
          maxLength: 10000
          minLength: 1
          type: string
        voice_profile_id:
          description: Voice profile ID
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
          type: string
      required:
        - text
        - voice_profile_id
        - return_type
      type: object
    TTSApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/TTSOutput"
          description: Text to speech output
      type: object
    TTSOutput:
      additionalProperties: false
      properties:
        b64_audio_str:
          description: The PCM s16 audio data encoded as a base64 string. Only available when the return_type is 'b64_audio_str'.
          example: UklGRiQAAABXQVZFZm10IBAAAAABAAEAgD4AAAB9AAACABAAZGF0YQ==
          type: string
        file_url:
          description: The URL of the audio file. Only available when the return_type is 'file_url'.
          example: https://mirako.ai/audio/a1b2c3d4-e5f6-7890-1234-567890abcdef.wav
          type: string
        id:
          description: The unique request ID
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
          type: string
        output_duration:
          description: The duration of the output audio in seconds.
          example: 5
          format: double
          type: number
        voice_profile_id:
          description: The voice profile ID used for TTS
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
          type: string
      required:
        - id
        - voice_profile_id
      type: object
    TTSParams:
      additionalProperties: false
      properties:
        fragment_interval:
          description: Control the length of pause between sentenses. Default is 0.1.
          example: 0.1
          format: float
          maximum: 1
          minimum: 0
          type: number
        temperature:
          description: The temperature for the TTS model, controls the randomness of the output. Default is 1.0.
          example: 1
          format: float
          maximum: 1
          minimum: 0
          type: number
      type: object
    TerminateApiRequestBody:
      additionalProperties: false
      properties:
        instance_id:
          description: The id of the instances to be terminated
          items:
            type: string
          nullable: true
          type: array
      required:
        - instance_id
      type: object
    TerminateApiResponseBody:
      additionalProperties: false
      properties:
        data:
          $ref: "#/components/schemas/TerminateInstancesOutput"
          description: The result of the termination request
      type: object
    TerminateInstancesOutput:
      additionalProperties: false
      properties:
        terminated_instances:
          description: The list of terminated instance IDs
          items:
            type: string
          nullable: true
          type: array
      required:
        - terminated_instances
      type: object
    Webhook:
      additionalProperties: false
      properties:
        auth_token:
          description: "Auth token used to authenticate the webhook via 'Authorization: Bearer' header"
          example: secure_token_for_webhook
          type: string
        url:
          description: Webhook URL to receive the async task status
          example: https://my-ai-service.com/webhook
          type: string
      required:
        - url
      type: object
  securitySchemes:
    BearerAuth:
      bearerFormat: api token
      description: Bearer token authentication using OAuth 2.0 API tokens
      in: header
      scheme: bearer
      type: http
info:
  title: Mirako API
  version: 1.0.0
openapi: 3.0.3
paths:
  /v1/avatar/async_build:
    post:
      description: Create an avatar build task. This is an async operation. Building an avatar requires a base image of the designated avatar appearance.
      operationId: BuildAvatarAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AsyncBuildApiRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncBuildApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Build avatar (async)
      tags:
        - Avatar
  /v1/avatar/async_generate:
    post:
      description: Create an avatar generation task. This is an async operation.
      operationId: GenerateAvatarAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AsyncGenerateAvatarApiRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncGenerateAvatarApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Generate avatar (async)
      tags:
        - Avatar
  /v1/avatar/async_generate/{task_id}/status:
    get:
      description: Get the status of an avatar generation task.
      operationId: GetAvatarGenerationStatus
      parameters:
        - description: The task ID of the avatar generation task
          in: path
          name: task_id
          required: true
          schema:
            description: The task ID of the avatar generation task
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateAvatarStatusApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Get avatar generation task status
      tags:
        - Avatar
  /v1/avatar/list:
    get:
      description: Get list of avatars of current user
      operationId: GetUserAvatarList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserAvatarListApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Get list of avatars
      tags:
        - Avatar
  /v1/avatar/{id}:
    delete:
      description: Delete an avatar by its unique ID.
      operationId: DeleteAvatar
      parameters:
        - description: The avatar id
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
          in: path
          name: id
          required: true
          schema:
            description: The avatar id
            example: a1b2c3d4-e5f6-7890-1234-567890abcdef
            type: string
      responses:
        "204":
          description: No Content
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Delete avatar
      tags:
        - Avatar
    get:
      description: Get an avatar by its unique ID.
      operationId: GetAvatarById
      parameters:
        - description: The avatar id
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
          in: path
          name: id
          required: true
          schema:
            description: The avatar id
            example: a1b2c3d4-e5f6-7890-1234-567890abcdef
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAvatarApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Get avatar by ID
      tags:
        - Avatar
  /v1/image/async_generate:
    post:
      description: Create an image generation task. This is an async operation.
      operationId: GenerateImageAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AsyncGenerateImageApiRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncGenerateImageApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Generate an image (async)
      tags:
        - Image
  /v1/image/async_generate/{task_id}/status:
    get:
      description: Get the status of an image generation task.
      operationId: GetImageGenerationStatus
      parameters:
        - description: The task ID of the image generation task
          in: path
          name: task_id
          required: true
          schema:
            description: The task ID of the image generation task
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateImageStatusApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Get the status of an image generation task
      tags:
        - Image
  /v1/interactive/list:
    get:
      description: List all active interactive sessions.
      operationId: ListInteractiveSessions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSessionsApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: List active interactive sessions
      tags:
        - Interactive
  /v1/interactive/session/{id}/profile:
    get:
      description: Get the session profile for a given session id.
      operationId: GetSessionProfile
      parameters:
        - description: Session ID
          in: path
          name: id
          required: true
          schema:
            description: Session ID
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSessionProfileApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Get session profile
      tags:
        - Interactive
  /v1/interactive/start_session:
    post:
      description: Start an interactive session.
      operationId: StartInteractiveSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartSessionApiRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartSessionApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Start interactive session
      tags:
        - Interactive
  /v1/interactive/stop_sessions:
    post:
      description: Stop interactive sessions specified by session ids.
      operationId: StopInteractiveSessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopSessionsApiRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopSessionsApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Stop interactive sessions
      tags:
        - Interactive
  /v1/speech/stt:
    post:
      description: Convert speech to text.
      operationId: ConvertSpeechToText
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/STTApiRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/STTApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Speech to text
      tags:
        - Speech
  /v1/speech/tts:
    post:
      description: Synthesize text to speech using the given voice profile.
      operationId: ConvertTextToSpeech
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TTSApiRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TTSApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Text to speech
      tags:
        - Speech
  /v1/video/async_generate_avatar_motion:
    post:
      description: Create a avatar motion video generation task. This is an async operation.
      operationId: GenerateAvatarMotionAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AsyncGenerateAvatarMotionApiRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncGenerateAvatarMotionApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Generate a avatar motion video (async)
      tags:
        - Video
  /v1/video/async_generate_avatar_motion/{task_id}/status:
    get:
      description: Get the status of a avatar motion video generation task.
      operationId: GetAvatarMotionGenerationStatus
      parameters:
        - description: The task ID of the avatar motion video generation task
          in: path
          name: task_id
          required: true
          schema:
            description: The task ID of the avatar motion video generation task
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateAvatarMotionStatusApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Get avatar motion task status
      tags:
        - Video
  /v1/video/async_generate_talking_avatar:
    post:
      description: Create a talking avatar video generation task. This is an async operation.
      operationId: GenerateTalkingAvatarAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AsyncGenerateTalkingAvatarApiRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncGenerateTalkingAvatarApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Generate a talking avatar video (async)
      tags:
        - Video
  /v1/video/async_generate_talking_avatar/{task_id}/status:
    get:
      description: Get the status of a talking avatar video generation task.
      operationId: GetTalkingAvatarGenerationStatus
      parameters:
        - description: The task ID of the talking avatar video generation task
          in: path
          name: task_id
          required: true
          schema:
            description: The task ID of the talking avatar video generation task
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateTalkingAvatarStatusApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Get talking avatar task status
      tags:
        - Video
  /v1/voice/clone:
    post:
      description: Perform voice cloning from given voice samples. It creates a new voice profile that you can use it for speech generation.
      operationId: CloneVoiceAsync
      requestBody:
        content:
          multipart/form-data:
            encoding:
              annotation_list:
                contentType: text/plain
              audio_samples:
                contentType: audio/wav
              clean_data:
                contentType: text/plain
              description:
                contentType: text/plain
              name:
                contentType: text/plain
              webhook:
                contentType: text/plain
              webhook_auth:
                contentType: text/plain
            schema:
              properties:
                annotation_list:
                  contentEncoding: binary
                  contentMediaType: application/octet-stream
                  description: The annotation file for the voice cloning task
                  format: binary
                  type: string
                audio_samples:
                  items:
                    contentEncoding: binary
                    contentMediaType: application/octet-stream
                    description: The audio samples for the voice cloning task. At least 6 audio files are required.
                    format: binary
                    type: string
                  type: array
                clean_data:
                  default: false
                  description: Specify whether de-noise processing should be performed. Default is False.
                  type: boolean
                description:
                  description: Optional description for the new voice profile.
                  example: Sweet British woman voice.
                  maxLength: 512
                  type: string
                name:
                  description: The name of the new voice profile to be created. If not provided, a default name will be generated.
                  example: My Custom Voice
                  maxLength: 64
                  minLength: 3
                  type: string
                webhook:
                  description: Optional webhook url to notify when the task is completed
                  type: string
                webhook_auth:
                  description: Auth token for webhook authentication
                  type: string
              required:
                - annotation_list
                - audio_samples
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncFinetuningApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Cloning voice
      tags:
        - Voice
  /v1/voice/clone/{task_id}/status:
    get:
      description: Get the status of voice cloning task.
      operationId: GetVoiceCloningStatus
      parameters:
        - description: The task ID of the voice cloning task
          in: path
          name: task_id
          required: true
          schema:
            description: The task ID of the voice cloning task
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FinetuningStatusApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Get voice cloning task status
      tags:
        - Voice
  /v1/voice/premade_profiles:
    get:
      description: Get the list of premade voice profiles. These profiles are pre-designed voices from our labs that you can use for speech generation or interactive sessions.
      operationId: GetPremadeVoiceProfiles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPremadeProfilesApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: List premade voice profiles
      tags:
        - Voice
  /v1/voice/profiles:
    get:
      description: List my custom (cloned) voice profiles.
      operationId: GetUserVoiceProfiles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetVoiceProfilesApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: List voice profiles
      tags:
        - Voice
  /v1/voice/profiles/{id}:
    delete:
      description: Delete a voice profile by its unique ID.
      operationId: DeleteVoiceProfile
      parameters:
        - description: The voice profile id
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
          in: path
          name: id
          required: true
          schema:
            description: The voice profile id
            example: a1b2c3d4-e5f6-7890-1234-567890abcdef
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteVoiceProfileApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Delete voice profile
      tags:
        - Voice
    get:
      description: Get a specific voice profile by its unique ID.
      operationId: GetVoiceProfile
      parameters:
        - description: The voice profile id
          example: a1b2c3d4-e5f6-7890-1234-567890abcdef
          in: path
          name: id
          required: true
          schema:
            description: The voice profile id
            example: a1b2c3d4-e5f6-7890-1234-567890abcdef
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetVoiceProfileApiResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - BearerAuth: []
      summary: Get voice profile by ID
      tags:
        - Voice
